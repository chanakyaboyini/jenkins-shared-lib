// vars/deployToNexus.groovy

/**
 * Unstashes a WAR and uploads it to Nexus using the nexusArtifactUploader step.
 *
 * @param Map params
 *   - stash          : name of the stash containing the WAR (default: 'app-war')
 *   - nexusVersion   : Nexus version identifier (default: 'nexus3')
 *   - protocol       : http or https (default: 'http')
 *   - nexusUrl       : base URL or host:port of Nexus (default: env.NEXUS_HOST)
 *   - credentialsId  : Jenkins credential ID for Nexus deployer (default: 'nexus-deployer')
 *   - groupId        : Maven groupId for the artifact (default: 'org.springframework.samples')
 *   - version        : version to assign in Nexus (default: '3.1.1')
 *   - repository     : Nexus repository name (default: 'Spring-Clinic')
 *   - artifactId     : Maven artifactId (default: 'spring-clinic')
 *   - type           : packaging type, e.g. 'war' (default: 'war')
 */
def call(Map params = [:]) {
    // resolve parameters with defaults
    String warStash     = params.stash         ?: 'app-war'
    String nexusVersion = params.nexusVersion  ?: 'nexus3'
    String protocol     = params.protocol      ?: 'http'
    String nexusUrl     = params.nexusUrl      ?: env.NEXUS_HOST
    String credsId      = params.credentialsId ?: 'nexus-deployer'
    String groupId      = params.groupId       ?: 'org.springframework.samples'
    String version      = params.version       ?: '3.1.1'
    String repository   = params.repository    ?: 'Spring-Clinic'
    String artifactId   = params.artifactId    ?: 'spring-clinic'
    String type         = params.type          ?: 'war'

    // bring back the WAR file
    unstash warStash

    // locate the WAR to upload
    def warFile = findFiles(glob: "*.${type}")[0].path

    // upload to Nexus
    nexusArtifactUploader(
        nexusVersion:  nexusVersion,
        protocol:      protocol,
        nexusUrl:      nexusUrl,
        credentialsId: credsId,
        groupId:       groupId,
        version:       version,
        repository:    repository,
        artifacts: [[
            artifactId: artifactId,
            file:       warFile,
            type:       type
        ]]
    )

    echo "âœ… Deployed ${warFile} to Nexus repo '${repository}' with version ${version}"
}
